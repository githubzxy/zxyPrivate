<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<!-- 自动扫描controller包下的所有类，使其认为是spring MVC的控制器 -->
	<context:component-scan base-package="com.yz.center">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!-- 异常处理 -->

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动spring MVC的注解功能,完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- JSON转化器 -->
			</list>
		</property>
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/" p:suffix=".jsp" />

	<!-- 自定义拦截链配置 -->
	<!-- <mvc:interceptors> token拦截器 <mvc:interceptor> <mvc:mapping path="/**/*.cmd" 
		/> <bean class="com.yz.course.interceptor.TokenInterceptor"> 配置不要拦截的请求路径 
		<property name="excludeUrls"> <list> <value>/getAllPicture.cmd</value> </list> 
		</property> </bean> </mvc:interceptor> </mvc:interceptors> -->

	<!--  使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 */-->
	<mvc:interceptors> 
		<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的   -->
		<!-- <mvc:interceptor>
			<mvc:mapping path="/main/*.html"/>
			<bean class="com.yz.center.interceptor.MainIntercept"> 
				<property name="mainExcludeUrls">
					<list>
						<value>/main/index.html</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor> -->
		<mvc:interceptor>
			<mvc:mapping path="/**/*.html"/>
			<bean class="com.yz.center.interceptor.LoginIntercept"> 
				<property name="excludeUrls">
					<list>
						<value>/</value>
						<value>/main/index.html</value>
						<value>/admin/login/toLogin.html</value>
						<value>/admin/login/logout.html</value>
						<value>/admin/login/initVerify.html</value>
						<value>/admin/login/login.html</value>
						<value>/admin/login/indexLogin.html</value>
						<value>/main/category.html</value>
						<value>/resource/uploadRes.html</value>
						<value>/admin/course/uploadCover.html</value>
						<value>/lecturer/findMoreLecturerInfo.html</value>
						<value>/admin/lecturer/findMoreLecturerInfo.html</value>
						<value>/admin/login/toApply.html</value>
						<value>/course/open/findIndexOpencourse.html</value>
						<value>/admin/notice/detail.html</value>
					</list>
				</property>
				<property name="sysUrls">
					<list>
						<value>/base/prompt.html</value>
						<value>/base/404.html</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor> 
	</mvc:interceptors>

</beans>